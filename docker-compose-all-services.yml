---
version: "2.1"
services:
  #Filebeat container
  filebeat:
    container_name: filebeat
    hostname: filebeat
    user: root
    image: "docker.elastic.co/beats/filebeat:${ELASTIC_VERSION}"
    volumes:
      #Mount the filebeat configuration so users can make edit
      - ${FILEBEAT_CONFIG}/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      #Mount the modules directory. Users can in turn add modules to this directory and they will be dynamically loaded
      - ${FILEBEAT_CONFIG}/modules.d/:/usr/share/filebeat/modules.d/
      #Mount the nginx logs into the filebeat container so we can access and index them using the filebeat nginx module
      - /var/log/nginx/:/var/log/nginx/
      #Mount the hosts system log directory. This represents the logs of the VM hosting docker. Consumed by the filebeat system module.
      - /var/log/:/var/log/host/:ro
      #Mount the docker logs
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      #Named volume fsdata. This is used to persist the registry file between restarts, so to avoid data duplication
      - fbdata:/usr/share/filebeat/data/      
    networks: ['host']
    command: filebeat -e -E cloud.id=${ES_CLOUD_ID} -E cloud.auth=elastic:${ES_CLOUD_AUTH} -strict.perms=false
    restart: on-failure
    depends_on:
      # wait for the these services to come up.
      nginx: { condition: service_started }

  #Metricbeat container
  metricbeat:
    container_name: metricbeat
    hostname: metricbeat
    user: root
    image: docker.elastic.co/beats/metricbeat:${ELASTIC_VERSION}
    volumes:
      #Mount the metricbeat configuration so users can make edit
      - ${METRICBEAT_CONFIG}/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      #Mount the modules.d directory into the container. This allows user to potentially make changes to the modules and they will be dynamically loaded.
      - ${METRICBEAT_CONFIG}/modules.d/:/usr/share/metricbeat/modules.d/
      # The commented sections below enable Metricbeat to monitor the Docker host rather than the Metricbeat container. These are used by the system module.
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      #Allows us to report on docker from the hosts information
      - /var/run/docker.sock:/var/run/docker.sock:ro
      #We mount the host filesystem so we can report on disk usage with the system module
      - /:/hostfs:ro
    command: metricbeat -e -system.hostfs=/hostfs -E cloud.id=${ES_CLOUD_ID} -E cloud.auth=elastic:${ES_CLOUD_AUTH} -strict.perms=false
    networks: ['host']
    restart: on-failure
    depends_on:
      # wait for the these services to come up.
      nginx: { condition: service_started }

  #Heartbeat container
  heartbeat:
    container_name: heartbeat
    hostname: heartbeat
    image: "docker.elastic.co/beats/heartbeat:${ELASTIC_VERSION}"
    volumes:
      #Mount the heartbeat configuration so users can make edits
      - ${HEARTBEAT_CONFIG}/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
    command: heartbeat -e -E cloud.id=${ES_CLOUD_ID} -E cloud.auth=elastic:${ES_CLOUD_AUTH} -strict.perms=false
    networks: ['host']
    restart: on-failure
    
  #Nginx container
  nginx:
    container_name: nginx
    hostname: nginx
    build: ${PWD}/config/nginx
    networks: ['host']
    #Expose port 80 to allow users to hit content and generate data for filebeat and packetbeat
    ports: ['80:80']
    command: nginx -g 'daemon off;'
    volumes:
      #Logs are mounted to a relative path. These are also accessed by Filebeat and consumed by the Nginx module
      - /var/log/nginx/:/var/log/nginx/

volumes:
  #Filebeat data
  fbdata:
    driver: local
networks: {host: {}}